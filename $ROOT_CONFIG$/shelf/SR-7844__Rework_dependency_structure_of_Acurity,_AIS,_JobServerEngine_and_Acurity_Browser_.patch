Index: ../gradleCommonPlugin/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../gradleCommonPlugin/build.gradle	(revision 27801+:161727ec0a2b+)
+++ ../gradleCommonPlugin/build.gradle	(revision 27801+:161727ec0a2b+)
@@ -0,0 +1,15 @@
+apply plugin: 'groovy'
+
+dependencies {
+    compile gradleApi()
+}
+
+group = 'au.com.finsyn'
+
+repositories {
+    mavenCentral()
+}
+
+task wrapper(type: Wrapper) {
+    gradleVersion = '2.4'
+}
\ No newline at end of file
Index: ../gradleCommonPlugin/gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../gradleCommonPlugin/gradle/wrapper/gradle-wrapper.properties	(revision 27801+:161727ec0a2b+)
+++ ../gradleCommonPlugin/gradle/wrapper/gradle-wrapper.properties	(revision 27801+:161727ec0a2b+)
@@ -0,0 +1,6 @@
+#Mon May 18 12:01:25 AEST 2015
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.4-bin.zip
Index: ../gradleCommonPlugin/src/main/resources/META-INF/gradle-plugins/au.com.finsyn.gradlecommonplugin.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../gradleCommonPlugin/src/main/resources/META-INF/gradle-plugins/au.com.finsyn.gradlecommonplugin.properties	(revision 27801+:161727ec0a2b+)
+++ ../gradleCommonPlugin/src/main/resources/META-INF/gradle-plugins/au.com.finsyn.gradlecommonplugin.properties	(revision 27801+:161727ec0a2b+)
@@ -0,0 +1,1 @@
+implementation-class=au.com.finsyn.gradlecommonplugin.GradleCommonPlugin
\ No newline at end of file
Index: ../gradleCommonPlugin/gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../gradleCommonPlugin/gradlew	(revision 27801+:161727ec0a2b+)
+++ ../gradleCommonPlugin/gradlew	(revision 27801+:161727ec0a2b+)
@@ -0,0 +1,164 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched.
+if $cygwin ; then
+    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+fi
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >&-
+APP_HOME="`pwd -P`"
+cd "$SAVED" >&-
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: ../acurityCommon/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../acurityCommon/build.gradle	(revision 27801:161727ec0a2b686bbe72941daafd436d69dffb65)
+++ ../acurityCommon/build.gradle	(revision 27801+:161727ec0a2b+)
@@ -1,14 +1,11 @@
-apply plugin: 'java'
-
-repositories {
-    maven { url 'http://fspc143:8081/artifactory/repo' }
-    mavenCentral()
+buildscript {
+    dependencies {
+        classpath files('../gradleCommonPlugin/build/libs/gradleCommonPlugin.jar')
-}
+    }
-
-configurations.all {
-    // check for updates every build
-    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
 }
+
+apply plugin: 'java'
+apply plugin: 'au.com.finsyn.gradlecommonplugin'
 
 dependencies {
     compile project(':..:acurityDataModel')
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- build.gradle	(revision 27801:161727ec0a2b686bbe72941daafd436d69dffb65)
+++ build.gradle	(revision 27801+:161727ec0a2b+)
@@ -1,25 +1,19 @@
-allprojects {
+buildscript {
+    dependencies {
+        classpath files('../gradleCommonPlugin/build/libs/gradleCommonPlugin.jar')
+    }
+}
+
-    apply plugin: "java"
+apply plugin: "java"
+apply plugin: 'au.com.finsyn.gradlecommonplugin'
+apply plugin: "idea"
-    apply plugin: "eclipse"
+apply plugin: "eclipse"
 
-    group = 'au.com.finsyn'
+group = 'au.com.finsyn'
 
-    sourceCompatibility = 1.8
-    targetCompatibility = 1.8
+sourceCompatibility = 1.8
+targetCompatibility = 1.8
 
-    repositories {
-        maven { url 'http://fspc143:8081/artifactory/repo' }
-        mavenCentral()
-    }
-
-    configurations.all {
-        // check for updates every build
-        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
-    }
-}
-
-apply plugin: "idea"
-
 configurations {
     jaxb
     provided
@@ -256,16 +250,10 @@
     dependsOn(':..:acurityDataModel:assemble', jaxb)
 }
 
-task cleanAndBuild {
-    dependsOn(clean, build)
-}
-
 tasks.compileJava.dependsOn(generateSource)
 tasks.eclipse.dependsOn(generateSource)
 tasks.idea.dependsOn(generateSource)
-tasks.clean.dependsOn(subprojects.clean)
 tasks.build.mustRunAfter clean
-tasks.build.dependsOn(subprojects.build)
 
 compileJava {
 //    options.compilerArgs << '-verbose'  // Puts out verbose info about every class compiled. Useful for tracking
\ No newline at end of file
Index: ../../.hgignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../../.hgignore	(revision 27801:161727ec0a2b686bbe72941daafd436d69dffb65)
+++ ../../.hgignore	(revision 27801+:161727ec0a2b+)
@@ -47,6 +47,7 @@
 srcjava/acurityDataModel/bin/**
 srcjava/acurityDataModel/dist/**
 srcjava/acurityCommon/build/**
+srcjava/gradleCommonPlugin/build/**
 srcjava/install/**
 srcjava/dist/**
 srcjava/Install/**
\ No newline at end of file
Index: ../finsynCommons/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../finsynCommons/build.gradle	(revision 27801:161727ec0a2b686bbe72941daafd436d69dffb65)
+++ ../finsynCommons/build.gradle	(revision 27801+:161727ec0a2b+)
@@ -1,4 +1,11 @@
+buildscript {
+    dependencies {
+        classpath files('../gradleCommonPlugin/build/libs/gradleCommonPlugin.jar')
+    }
+}
+
 apply plugin: "java"
+apply plugin: 'au.com.finsyn.gradlecommonplugin'
 
 sourceCompatibility = 1.8
 targetCompatibility = 1.8
@@ -6,11 +13,6 @@
 repositories {
     maven { url 'http://fspc143:8081/artifactory/repo' }
     mavenCentral()
-}
-
-configurations.all {
-    // check for updates every build
-    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
 }
 
 dependencies {
\ No newline at end of file
Index: ../acurityDataModel/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../acurityDataModel/build.gradle	(revision 27801:161727ec0a2b686bbe72941daafd436d69dffb65)
+++ ../acurityDataModel/build.gradle	(revision 27801+:161727ec0a2b+)
@@ -14,19 +14,16 @@
 def generatorResourcesJava = "src/generator/java"
 def generatorResourcesGroovy = "src/generator/groovy"
 
+buildscript {
+    dependencies {
+        classpath files('../gradleCommonPlugin/build/libs/gradleCommonPlugin.jar')
+    }
+}
+
 apply plugin: 'groovy'
 apply plugin: 'java'
 apply plugin: 'idea'
-
-repositories {
-    maven { url 'http://fspc143:8081/artifactory/repo' }
-    mavenCentral()
-}
-
-configurations.all {
-    // check for updates every build
-    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
-}
+apply plugin: 'au.com.finsyn.gradlecommonplugin'
 
 sourceSets {
     generator {
\ No newline at end of file
Index: ../gradleCommonPlugin/src/main/groovy/au/com/finsyn/gradlecommonplugin/GradleCommonPlugin.groovy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../gradleCommonPlugin/src/main/groovy/au/com/finsyn/gradlecommonplugin/GradleCommonPlugin.groovy	(revision 27801+:161727ec0a2b+)
+++ ../gradleCommonPlugin/src/main/groovy/au/com/finsyn/gradlecommonplugin/GradleCommonPlugin.groovy	(revision 27801+:161727ec0a2b+)
@@ -0,0 +1,67 @@
+package au.com.finsyn.gradlecommonplugin
+
+import org.gradle.api.Plugin
+import org.gradle.api.Project
+import org.gradle.api.Task
+import org.gradle.api.UnknownTaskException
+
+class GradleCommonPlugin implements Plugin<Project> {
+
+    @Override
+    void apply(Project target) {
+        setRepositories(target)
+        makeTaskDependOnSubprojectTasks(target, 'jar')
+        makeTaskDependOnSubprojectTasks(target, 'clean')
+        makeTaskDependOnSubprojectTasks(target, 'assemble')
+        makeTaskDependOnSubprojectTasks(target, 'build')
+        setNoResolutionCache(target)
+        addCleanAndBuild(target)
+    }
+
+    static void setRepositories(Project target) {
+        target.repositories {
+            maven { url 'http://fspc143:8081/artifactory/repo' }
+            mavenCentral()
+        }
+    }
+
+    private static void makeTaskDependOnSubprojectTasks(Project target, String taskName) {
+        try {
+            Task superProjectTask = target.tasks.getByName(taskName)
+            Set<Task> subProjectTasks = target.getTasksByName(taskName, true)
+            subProjectTasks.remove(superProjectTask)
+
+            superProjectTask.dependsOn(subProjectTasks)
+        } catch (UnknownTaskException e) {
+            // TODO ignore
+            e.printStackTrace(System.err)
+        }
+    }
+
+    @SuppressWarnings("GroovyAssignabilityCheck")
+    private static void setNoResolutionCache(Project target) {
+        target.configurations.all {
+            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
+        }
+    }
+
+    private static void addCleanAndBuild(Project target) {
+        try {
+            def cleanTask = target.tasks.getByName('clean')
+            def buildTask = target.tasks.getByName('build')
+
+            if (cleanTask != null && buildTask != null) {
+                target.task('cleanAndBuild').dependsOn(cleanTask, buildTask)
+            }
+        } catch (UnknownTaskException e) {
+            // TODO ignore
+            e.printStackTrace(System.err)
+        }
+    }
+
+    public static Set<Task> subprojectTasksMatching(Project superProject, Closure<Boolean> condition) {
+        Set<Task> tasks = superProject.subprojects.collect {superProject.tasks.findAll {condition}}.flatten()
+
+        tasks
+    }
+}
Index: ../gradleCommonPlugin/gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- ../gradleCommonPlugin/gradlew.bat	(revision 27801+:161727ec0a2b+)
+++ ../gradleCommonPlugin/gradlew.bat	(revision 27801+:161727ec0a2b+)
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
